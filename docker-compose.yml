version: "3.8"

services:
  backend:
    build:
      context: ./
      dockerfile: ./docker/nodeBack
    container_name: "${PROJECT_NAME}_backendNode"
    volumes:
      - ./backend:/usr/src/app
      - node_modules_back:/usr/src/app/node_modules
    env_file: ./.env   
    #ports:
    #  - $NODE_BACK_PORT_EXPUESTO:$NODE_BACK_PORT_INTERNO
    command: npm run dev
    # command: sh -c "npm run build && npm start"
    depends_on:
      - mongodb
    stdin_open: true
    tty: true

  mongodb:
    build:
      context: ./
      dockerfile: ./docker/mongo
    container_name: "${PROJECT_NAME}_mongoDB"
    restart: unless-stopped
    env_file: ./.env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=$MONGODB_USER
      - MONGO_INITDB_ROOT_PASSWORD=$MONGODB_PASSWORD
    ports:
      - $MONGO_PORT_EXPUESTO:$MONGO_PORT_INTERNO
    volumes:
      - './db_data/db:/data/db'
      - './db_data/configdb:/data/configdb'
      
  frontend:
    build:
      context: ./
      dockerfile: ./docker/nodeFront
    container_name: "${PROJECT_NAME}_frontendNode"
    volumes:
      - ./frontend:/usr/src/app
      - node_modules_front:/usr/src/app/node_modules
    env_file: ./.env   
    ports:
      - $NODE_FRONT_PORT_EXPUESTO:$NODE_FRONT_PORT_INTERNO
    stdin_open: true
    tty: true
    command: npm run start
    #command: sh -c "npm run build && serve -s -l $NODE_PORT build"

  nginx:
    image: nginx:latest
    container_name: "${PROJECT_NAME}_nginx"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    env_file: ./.env   
    ports:
      - $NGINX_PORT_EXPUESTO:$NGINX_PORT_INTERNO
    depends_on:
      - backend
      - frontend

volumes:
  node_modules_back:
    driver: local
  node_modules_front:
    driver: local
